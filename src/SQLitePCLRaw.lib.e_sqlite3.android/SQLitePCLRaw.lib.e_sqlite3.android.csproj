<Project Sdk="Xamarin.Legacy.Sdk">
	<PropertyGroup>
		<TargetFrameworks>$(tfm_net8_android);$(tfm_classic_android);netstandard2.0</TargetFrameworks>
		<EnableDefaultCompileItems>false</EnableDefaultCompileItems>
		<SignAssembly>true</SignAssembly>
		<AssemblyOriginatorKeyFile>..\..\sn\SQLitePCLRaw.lib.e_sqlite3.snk</AssemblyOriginatorKeyFile>
        <PackageDescription>This package contains platform-specific native code builds of SQLite for use with SQLitePCLRaw.  To use this, you need SQLitePCLRaw.core as well as one of the SQLitePCLRaw.provider.* packages.  Convenience packages are named SQLitePCLRaw.bundle_*.</PackageDescription>
	</PropertyGroup>

<ItemGroup>
    <Compile Include="..\..\src\common\embedded_init.cs" />
</ItemGroup>

  <PropertyGroup Label="Android DesignTimeBuild error workaround"> 
    <DesignTimeBuild>false</DesignTimeBuild>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedNativeLibrary Include="$([System.IO.Path]::Combine($(cb_bin_path), 'e_sqlite3', 'android', 'x86', 'libe_sqlite3.so'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>x86\libe_sqlite3.so</Link>
    </EmbeddedNativeLibrary>
    <EmbeddedNativeLibrary Include="$([System.IO.Path]::Combine($(cb_bin_path), 'e_sqlite3', 'android', 'x86_64', 'libe_sqlite3.so'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>x86_64\libe_sqlite3.so</Link>
    </EmbeddedNativeLibrary>
    <EmbeddedNativeLibrary Include="$([System.IO.Path]::Combine($(cb_bin_path), 'e_sqlite3', 'android', 'arm64-v8a', 'libe_sqlite3.so'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>arm64-v8a\libe_sqlite3.so</Link>
    </EmbeddedNativeLibrary>
    <EmbeddedNativeLibrary Include="$([System.IO.Path]::Combine($(cb_bin_path), 'e_sqlite3', 'android', 'armeabi-v7a', 'libe_sqlite3.so'))">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Link>armeabi-v7a\libe_sqlite3.so</Link>
    </EmbeddedNativeLibrary>
  </ItemGroup>

</Project>

